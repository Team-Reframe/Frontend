// Generated by view binder compiler. Do not edit!
package com.example.reframe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.reframe.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPasswordChangeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final BottomNavigationView bottomNavigation;

  @NonNull
  public final Button btnChangePassword;

  @NonNull
  public final TextInputEditText etConfirmPassword;

  @NonNull
  public final TextInputEditText etCurrentPassword;

  @NonNull
  public final TextInputEditText etNewPassword;

  @NonNull
  public final TextInputLayout tilConfirmPassword;

  @NonNull
  public final TextInputLayout tilCurrentPassword;

  @NonNull
  public final TextInputLayout tilNewPassword;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final TextView tvConfirmPasswordLabel;

  @NonNull
  public final TextView tvCurrentPasswordLabel;

  @NonNull
  public final TextView tvNewPasswordLabel;

  @NonNull
  public final TextView tvTitle;

  private ActivityPasswordChangeBinding(@NonNull ConstraintLayout rootView,
      @NonNull BottomNavigationView bottomNavigation, @NonNull Button btnChangePassword,
      @NonNull TextInputEditText etConfirmPassword, @NonNull TextInputEditText etCurrentPassword,
      @NonNull TextInputEditText etNewPassword, @NonNull TextInputLayout tilConfirmPassword,
      @NonNull TextInputLayout tilCurrentPassword, @NonNull TextInputLayout tilNewPassword,
      @NonNull MaterialToolbar toolbar, @NonNull TextView tvConfirmPasswordLabel,
      @NonNull TextView tvCurrentPasswordLabel, @NonNull TextView tvNewPasswordLabel,
      @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.bottomNavigation = bottomNavigation;
    this.btnChangePassword = btnChangePassword;
    this.etConfirmPassword = etConfirmPassword;
    this.etCurrentPassword = etCurrentPassword;
    this.etNewPassword = etNewPassword;
    this.tilConfirmPassword = tilConfirmPassword;
    this.tilCurrentPassword = tilCurrentPassword;
    this.tilNewPassword = tilNewPassword;
    this.toolbar = toolbar;
    this.tvConfirmPasswordLabel = tvConfirmPasswordLabel;
    this.tvCurrentPasswordLabel = tvCurrentPasswordLabel;
    this.tvNewPasswordLabel = tvNewPasswordLabel;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPasswordChangeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPasswordChangeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_password_change, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPasswordChangeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottom_navigation;
      BottomNavigationView bottomNavigation = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigation == null) {
        break missingId;
      }

      id = R.id.btn_change_password;
      Button btnChangePassword = ViewBindings.findChildViewById(rootView, id);
      if (btnChangePassword == null) {
        break missingId;
      }

      id = R.id.et_confirm_password;
      TextInputEditText etConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (etConfirmPassword == null) {
        break missingId;
      }

      id = R.id.et_current_password;
      TextInputEditText etCurrentPassword = ViewBindings.findChildViewById(rootView, id);
      if (etCurrentPassword == null) {
        break missingId;
      }

      id = R.id.et_new_password;
      TextInputEditText etNewPassword = ViewBindings.findChildViewById(rootView, id);
      if (etNewPassword == null) {
        break missingId;
      }

      id = R.id.til_confirm_password;
      TextInputLayout tilConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (tilConfirmPassword == null) {
        break missingId;
      }

      id = R.id.til_current_password;
      TextInputLayout tilCurrentPassword = ViewBindings.findChildViewById(rootView, id);
      if (tilCurrentPassword == null) {
        break missingId;
      }

      id = R.id.til_new_password;
      TextInputLayout tilNewPassword = ViewBindings.findChildViewById(rootView, id);
      if (tilNewPassword == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tv_confirm_password_label;
      TextView tvConfirmPasswordLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvConfirmPasswordLabel == null) {
        break missingId;
      }

      id = R.id.tv_current_password_label;
      TextView tvCurrentPasswordLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvCurrentPasswordLabel == null) {
        break missingId;
      }

      id = R.id.tv_new_password_label;
      TextView tvNewPasswordLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvNewPasswordLabel == null) {
        break missingId;
      }

      id = R.id.tv_title;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new ActivityPasswordChangeBinding((ConstraintLayout) rootView, bottomNavigation,
          btnChangePassword, etConfirmPassword, etCurrentPassword, etNewPassword,
          tilConfirmPassword, tilCurrentPassword, tilNewPassword, toolbar, tvConfirmPasswordLabel,
          tvCurrentPasswordLabel, tvNewPasswordLabel, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
